version: '3.8'

services:
  # Main application service
  edutorium-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: edutorium-battle-system
    ports:
      - "80:80"      # Apache web server
      - "8080:8080"  # WebSocket server
    environment:
      - APP_ENV=production
      - SUPABASE_URL=${SUPABASE_URL:-https://ratxqmbqzwbvfgsonlrd.supabase.co}
      - SUPABASE_KEY=${SUPABASE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJhdHhxbWJxendidmZnc29ubHJkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQyMDI0NDAsImV4cCI6MjA1OTc3ODQ0MH0.HJ9nQbvVvVisvQb6HMVMlmQBVmW7Ie42Z6Afdwn8W2M}
    volumes:
      - ./logs:/var/log/apache2
      - ./uploads:/var/www/html/uploads
    networks:
      - edutorium-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional, for production)
  nginx-proxy:
    image: nginx:alpine
    container_name: edutorium-nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - edutorium-app
    networks:
      - edutorium-network
    restart: unless-stopped
    profiles:
      - production

  # Redis for session storage and caching (optional)
  redis:
    image: redis:7-alpine
    container_name: edutorium-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - edutorium-network
    restart: unless-stopped
    profiles:
      - production

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: edutorium-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - edutorium-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: edutorium-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - edutorium-network
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  edutorium-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
